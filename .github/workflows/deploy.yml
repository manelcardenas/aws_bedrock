name: Deploy CDK IMAGE GENERATION Infrastructure  # Workflow name shown in GitHub Actions tab

on: # TRIGGERS - when this workflow runs
  push:
    branches: [ main ]  # 🚀 Deploy to PROD when pushing to main
    paths: [ 'infra_images/**' ]  # Only when CDK code changes

jobs: # JOBS - what actually runs
  deploy:
    runs-on: ubuntu-latest # Use GitHub's Ubuntu server
    environment: production  # 🔒 GitHub environment protection
    
    steps: # STEPS - executed in order
    - name: 📥 Checkout repository
      uses: actions/checkout@v4 # Checkout the repository
      
    - name: 🟢 Setup Node.js (for CDK)
      uses: actions/setup-node@v4 # Setup Node.js
      with:
        node-version: '20'
        
    - name: 🐍 Setup Python (for Lambda)
      uses: actions/setup-python@v4 # Setup Python
      with:
        python-version: '3.12'
        
    - name: 📦 Install AWS CDK
      run: npm install -g aws-cdk # Install AWS CDK
        
    - name: 🔐 Set AWS credentials as environment variables
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        echo "AWS credentials configured via environment variables"
        aws sts get-caller-identity  # Verify credentials work
        
    - name: 📚 Install Python dependencies
      working-directory: ./infra_images
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 Show deployment preview
      working-directory: ./infra_images
      run: cdk diff || true  # Show diff but don't fail if no changes
        
    - name: 🔧 Bootstrap CDK (if needed)
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra_images
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        echo "🔧 Ensuring CDK is bootstrapped in us-west-2..."
        cdk bootstrap || echo "⚠️ Bootstrap failed or already exists, continuing..."
        
    - name: 💾 Backup current stack (for rollback)
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra_images
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        echo "💾 Creating backup of current stack..."
        aws cloudformation describe-stacks --stack-name InfraImagesStack > stack-backup.json || echo "No existing stack to backup"
        
    - name: 🚀 Deploy to Production (main branch only)
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra_images
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        echo "🚀 Deploying to production..."
        # Deploy with rollback on failure
        if cdk deploy --require-approval never; then
          echo "✅ Production deployment complete!"
        else
          echo "❌ Deployment failed! Check logs for details."
          echo "🔄 Consider manual rollback if needed"
          exit 1
        fi